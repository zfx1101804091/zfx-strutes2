<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 配置连接池: -->
	<!-- 引入外部属性文件 -->
	<!--<context:property-placeholder location="classpath:jdbc.properties"/>-->
	<!-- 配置C3P0连接池: -->
	<!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
		&lt;!&ndash;c3p0私有属性&ndash;&gt;
		<property name="maxPoolSize" value="30"/>
		<property name="minPoolSize" value="10"/>
		&lt;!&ndash;关闭连接后不自动commit&ndash;&gt;
		<property name="autoCommitOnClose" value="false"/>

		&lt;!&ndash;获取连接超时时间&ndash;&gt;
		<property name="checkoutTimeout" value="5000"/>
		&lt;!&ndash;当获取连接失败重试次数&ndash;&gt;
		<property name="acquireRetryAttempts" value="20"/>
	</bean>-->
	
	<!-- Hibernate的相关信息 -->
	<!--<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		&lt;!&ndash; 注入连接池 &ndash;&gt;
		<property name="dataSource" ref="dataSource"/>
		&lt;!&ndash; 配置Hibernate的其他的属性 &ndash;&gt;
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.autocommit">false</prop>
				&lt;!&ndash;控制台打印SQL语句&ndash;&gt;
				<prop key="hibernate.show_sql">true</prop>
				&lt;!&ndash;格式化sql&ndash;&gt;
				<prop key="hibernate.format_sql">true</prop>
				&lt;!&ndash;方言&ndash;&gt;
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		&lt;!&ndash; 配置Hibernate的映射文件 &ndash;&gt;
		<property name="mappingResources">
			<list>
				
			</list>
		</property>
	</bean>-->
	<!-- Spring 中注册拦截器-->
	<!--<bean id="privilegeInterceptor" class="cn.itcast.shop.interceptor.PrivilegeInterceptor" scope="prototype">
	</bean>-->


	<!-- 事务管理: -->
	<!-- 事务管理器 -->
	<!--<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>-->
	
	<!-- 开启注解事务 -->
	<!--<tx:annotation-driven transaction-manager="transactionManager"/>-->
	
	<!-- Action的配置 ===========================-->
	
	<!-- 首页访问的Action -->
	<!--<bean id="indexAction" class="cn.itcast.shop.index.action.IndexAction" scope="prototype">
		<property name="categoryService" ref="categoryService"/>
		<property name="productService" ref="productService"/>
	</bean>-->
	
	<!-- 配置验证码Action -->
	<!--<bean id="checkImgAction" class="cn.itcast.shop.user.action.CheckImgAction" scope="prototype">
		
	</bean>-->
	
	<!-- 用户模块的Action -->
	<!--<bean id="userAction" class="cn.itcast.shop.user.action.UserAction" scope="prototype">
		&lt;!&ndash; 注入Service &ndash;&gt;
		<property name="userService" ref="userService"/>
	</bean>-->
	
	
	
	<!-- Service的配置  ===========================-->
	<!--<bean id="userService" class="cn.itcast.shop.user.service.UserService">
		<property name="userDao" ref="userDao"/>
	</bean>-->
	
	
	
	<!-- Dao的配置  ===========================-->
	<!--<bean id="userDao" class="cn.itcast.shop.user.dao.UserDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>-->
	
	
</beans>
